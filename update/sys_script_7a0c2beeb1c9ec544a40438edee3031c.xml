<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>cmn_cost_center</collection>
        <condition/>
        <description>Skapar attesträtter för "Specialattesträtter"</description>
        <execute_function>false</execute_function>
        <filter_condition table="cmn_cost_center">valid_fromISNOTEMPTY^EQ<item endquery="false" field="valid_from" goto="false" newquery="false" operator="ISNOTEMPTY" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>AF Attestera - New cost center</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    var sar = new GlideRecord('x_arams_af_atteste_special_attestation_rights');
    sar.addEncodedQuery('u_state=active');
    sar.query();
    while (sar.next()) {
		
        //Create attest reg for users with special attestation rights
        var gr = new GlideRecord('x_arams_af_atteste_attestation_register');
        gr.initialize();
        gr.setValue('u_state', 'active');
        gr.setValue('u_cost_center', current.getUniqueValue());
        gr.setValue('u_user', sar.u_user);
        gr.setValue('manager', sar.manager);
        //gr.setValue('u_attest_err', ge2.getUniqueValue());
       // gr.setValue('u_system', sar.u_system);
        gr.setValue('u_valid_from', sar.u_valid_from);
		gr.setValue('u_valid_to', sar.u_valid_to);
        //gr.setWorkflow(false);
        gr.insert();

    }



})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>velan</sys_created_by>
        <sys_created_on>2020-12-16 08:32:08</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_id>7a0c2beeb1c9ec544a40438edee3031c</sys_id>
        <sys_mod_count>10</sys_mod_count>
        <sys_name>AF Attestera - New cost center</sys_name>
        <sys_overrides/>
        <sys_package display_value="AF Attestera" source="x_arams_af_atteste">ad0596bc71dc20144a40604d772bb5e9</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="AF Attestera">ad0596bc71dc20144a40604d772bb5e9</sys_scope>
        <sys_update_name>sys_script_7a0c2beeb1c9ec544a40438edee3031c</sys_update_name>
        <sys_updated_by>velan</sys_updated_by>
        <sys_updated_on>2020-12-16 16:14:33</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
</record_update>
